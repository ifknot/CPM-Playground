; Register preserving wrapper functions for safe and consistent access to BDOS.
; Dogma: Only registers A & HL are corrupted
; register A is used for single byte arguements and return vlaues
; register HL is used to access all other arguements and return values via the descirbed memory structures

.8080						; accept only 8080 opcodes

NAME	('CPMIO')			; set the module name (overrides title) 
							; *only the first 6 characters are significant*
							
TITLE	CP/M I/O subroutines 04 October 

CSEG						; code segment relocatable code

; Return control to the CP/M operating system at the CCP level.
RESET::		PUSH 	BC		; preserve registers

			MVI 	C, RESETF##		
			CALL	BDOS##	; NB the double hash indicates to M80 an external name
			
			POP 	BC		; restore registers
			RET

; Get ASCII character from console device CON in register A (with echo)	
; Graphic characters, along with carriage return, line- feed, and back space (CTRL-H) are echoed to the console. 
; Tab characters, CTRL-I, move the cursor to the next tab stop.
; A check is made for start/stop scroll, CTRL-S, and start/stop printer echo, CTRL-P. 
; The FDOS does not return to the calling program until a character has been typed, thus suspending execution if a character is not ready.
GCHR::		PUSH	BC		; preserve registers	

			MVI		C, RCONF##	
			CALL	BDOS##
	
			POP		BC		; restore registers
			RET		
; Print ASCII character in register A to console device CON:
; As in GCHR, tabs are expanded and checks are made for start/stop scroll and printer echo.
PCHR::		PUSH	BC		; preserve registers
			PUSH 	DE		

			MVI		C, WCONF##	
			MOV		E, A
			CALL	BDOS##

			POP		DE		
			POP		BC		; restore registers
			RET		
			
			END
